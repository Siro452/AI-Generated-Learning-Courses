import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";
import Button from "../components/button";


const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Dacreed - AI Alpha</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center font-sans ">
        <div className="container flex flex-col justify-center gap-12 px-4 py-16 ">
          <h1 className="items-start text-5xl  tracking-tight sm:text-[5rem]">
            Welcome to <br />{" "}
            <img
              src="https://www.dacreed.com/static/Dacreed-logo-dark-f80888dcbd37d98ef1c3c84aabb5c049.png"
              className="h-1/2 w-1/2 items-start"
            ></img>{" "}
            <br />
            AI Learning Content Creator Prototype
          </h1>
          <div className="flex justify-end">
            <Button text="Jordan Prototype" href="/jordanprototype" />
            <Button text="Nick Prototype" href="/nickprototype/inputuser" />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
